name: API Clients CI

on:
  push:
    tags:
      - "v*"
  pull_request:
    branches:
      - "main"

jobs:
  api-clients:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: |
            valentinschabschneider/trusty-rex
          # generate Docker tags based on the following events/attributes
          tags: |
            type=semver,pattern={{version}}

      # Generate requirments.txt
      - run: uv sync --no-dev
      - run: uv pip freeze > requirements.txt

      # Generates a openapi.yaml file based on the FastAPI project.
      - name: Generate OpenAPI file
        uses: column-street/fastapi-openapi-specs-action@v1.0.2
        with:
          moduleDir: app
        env:
          SQLITE_PATH: /db.sqlite3

      # Uses an external tool, openapitools-generator-action, to generate the client code.
      # The 'openapirc.json' file is the following: { "packageName": "collector", "projectName": "collector" }
      # and it lives inside the master branch of the repository. Command outputs a new folder called
      - name: Generate Typescript Client
        uses: triaxtec/openapitools-generator-action@v1
        with:
          generator: typescript-fetch
          openapi-file: openapi.yaml
          config-file: api-clients/typescript-fetch/config.json
          template-dir: api-clients/typescript-fetch/templates
          command-args: --additional-properties=npmVersion=${{ steps.meta.outputs.version }}

      - name: Archive Generated Typescript Client
        uses: actions/upload-artifact@v4
        with:
          name: typescript-client
          path: typescript-fetch-client

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: "16.x"
          registry-url: "https://registry.npmjs.org"
      - run: npm i --package-lock-only
        working-directory: typescript-fetch-client
      - run: npm ci
        working-directory: typescript-fetch-client
      - run: npm publish --provenance --access public
        if: github.event_name != 'pull_request'
        working-directory: typescript-fetch-client
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
